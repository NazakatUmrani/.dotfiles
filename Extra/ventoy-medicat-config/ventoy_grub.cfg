
fi

menuentry '<-- Return to previous menu [Esc]' --class=vtoyret VTOY_RET {
    echo 'Returning...'
}

menuentry "Boot into Mini Windows 10 -->" --class=windows10 {
    set path="/Boot_an_Operating_System/[UEFI]_Mini_Windows_10.wim"
    vt_ext_select_img_path  "$path"
    wim_common_menuentry
}

menuentry "Boot Medicat VHD -->" --class=win10vhd {
    set path="/VHD/[UEFI]_MediCat_VHD_&DW.vhd"
    vt_ext_select_img_path  "$path"
    vhd_common_menuentry
    }

menuentry "Detailed Version Information --> " --class=medicat {
        echo 'MediCat USB v21.12, Ventoy version' $VENTOY_VERSION' '
        echo 'Theme:' $theme
        echo 'Gfxmode:' $gfxmode
        echo 'Gfxpayload:' $gfxpayload
        echo 'Grub_cpu:' $grub_cpu
        echo 'Grub_platform:' $grub_platform
        echo 'Vtoydev:' $vtoydev
        echo 'Vtoy_path:' $vtoy_path
        echo 'Vtdebug_flag:' $vtdebug_flag
        echo 'Vtoy_iso_part:' $vtoy_iso_part
        echo 'Vtoy_efi_part:' $vtoy_efi_part
        echo 'Ventoy_version:' $VENTOY_VERSION
        echo 'Vtoy_cur_video_mode:' $VTOY_CUR_VIDEO_MODE
        echo 'Vtoy_efi_arch:' $VTOY_EFI_ARCH
		echo " "
		echo " "
        ventoy_pause
	}

menuentry "List of  Bootable Tools -->" --class=search {
    set pager=1
    if [ -e $vtoy_iso_part/ventoy/Submenu_F6/list_of_tools.cfg ]; then
        set ventoy_new_context=1
        configfile $vtoy_iso_part/ventoy/Submenu_F6/list_of_tools.cfg
        unset ventoy_new_context
    else
       echo "list_of_tools.cfg NOT exist."
       echo -e "\npress ENTER to exit ..."
       read vtInputKey
    fi
	unset pager
        ventoy_pause
    }

menuentry "Changelog --> " --class=copy {
    set pager=1
    if [ -e $vtoy_iso_part/ventoy/Submenu_F6/changelog.cfg ]; then
        set ventoy_new_context=1
        configfile $vtoy_iso_part/ventoy/Submenu_F6/changelog.cfg
        unset ventoy_new_context
    else
       echo "changelog.cfg NOT exist."
       echo -e "\npress ENTER to exit ..."
       read vtInputKey
    fi
	unset pager
		ventoy_pause
    }
	
menuentry "Any Questions?" --class=help {
	echo "Please bring any questions or concerns to the official Discord server:"
	echo " "
	echo "https://discord.gg/hZWkufx3ye "
	echo " "
	echo " "	
		ventoy_pause
    }
	
menuentry "About the Author... " --class=rename {
	echo "I'm Jayro, the creator of MediCat USB."
	echo "I am a stay-at-home cat dad of two beautiful cats."
	echo "My tuxedo cat Pep√© is the inspiration for the MediCat mascot."
	echo "I live in the Pacific Northwest of the United States."
	echo "I first created MediCat for myself in 2012, as I could not find"
	echo "a bootable toolkit that fit my needs. Even Hiren's Boot Disk was"
	echo "lacking in my opinion. So I was inspired to make my own, and in"
	echo "March of 2014, MediCat was released to the world."
	echo " "
	echo "You can contact me directly on Discord with any"
	echo "comments or concerns:"
	echo " "
	echo "https://discord.gg/hZWkufx3ye "
	echo " "
	echo " "
		ventoy_pause
    }


if [ "$grub_platform" != "pc" ]; then
    submenu 'Ventoy UEFI Utilities' --class=debug_util {
        menuentry 'Fixup Windows BlinitializeLibrary Failure' --class=debug_util_blinit {
            chainloader ${vtoy_path}/vtoyutil_${VTOY_EFI_ARCH}.efi env_param=${env_param} ${vtdebug_flag} feature=fix_windows_mmap
            boot
            echo -e "\npress ENTER to exit ..."
            read vtInputKey
        }
fi

submenu 'Check plugin json configuration (ventoy.json)' --class=debug_json {
    menuentry 'Check global control plugin configuration' --class=debug_control {
        set pager=1
        vt_check_plugin_json $vt_plugin_path control $vtoy_iso_part
        
        echo -e "\npress ENTER to exit ..."
        read vtInputKey
        unset pager
    }
    
    menuentry 'Check theme plugin configuration' --class=debug_theme {
        set pager=1
        vt_check_plugin_json $vt_plugin_path theme $vtoy_iso_part
        
        echo -e "\npress ENTER to exit ..."
        read vtInputKey
        unset pager
    }
    
    menuentry 'Check auto install plugin configuration' --class=debug_autoinstall {
        set pager=1
        vt_check_plugin_json $vt_plugin_path auto_install $vtoy_iso_part
        
        echo -e "\npress ENTER to exit ..."
        read vtInputKey
        unset pager
    }
    
    menuentry 'Check persistence plugin configuration' --class=debug_persistence {
        set pager=1
        vt_check_plugin_json $vt_plugin_path persistence $vtoy_iso_part
        
        echo -e "\n############### dump persistence ###############"
        vt_dump_persistence
        
        echo -e "\npress ENTER to exit ..."
        read vtInputKey
        unset pager
    }
    
    menuentry 'Check menu alias plugin configuration' --class=debug_menualias {
        set pager=1
        vt_check_plugin_json $vt_plugin_path menu_alias $vtoy_iso_part
        
        echo -e "\npress ENTER to exit ..."
        read vtInputKey
        unset pager
    }
    
    menuentry 'Check menu class plugin configuration' --class=debug_menuclass {
        set pager=1
        vt_check_plugin_json $vt_plugin_path menu_class $vtoy_iso_part
        
        echo -e "\npress ENTER to exit ..."
        read vtInputKey
        unset pager
    }  

    menuentry 'Check injection plugin configuration' --class=debug_injection {
        set pager=1
        vt_check_plugin_json $vt_plugin_path injection $vtoy_iso_part
        
        echo -e "\npress ENTER to exit ..."
        read vtInputKey
        unset pager
    } 

    menuentry 'Check auto memdisk plugin configuration' --class=debug_automemdisk {
        set pager=1
        vt_check_plugin_json $vt_plugin_path auto_memdisk $vtoy_iso_part
        
        echo -e "\npress ENTER to exit ..."
        read vtInputKey
        unset pager
    }  

    menuentry 'Check image list plugin configuration' --class=debug_imagelist {
        set pager=1
        vt_check_plugin_json $vt_plugin_path image_list $vtoy_iso_part
        
        echo -e "\npress ENTER to exit ..."
        read vtInputKey
        unset pager
    }
    
    menuentry 'Check image blacklist plugin configuration' --class=debug_imageblacklist {
        set pager=1
        vt_check_plugin_json $vt_plugin_path image_blacklist $vtoy_iso_part
        
        echo -e "\npress ENTER to exit ..."
        read vtInputKey
        unset pager
    }
    
    menuentry 'Check boot conf replace plugin configuration' --class=debug_bootconf_replace {
        set pager=1
        vt_check_plugin_json $vt_plugin_path conf_replace $vtoy_iso_part
        
        echo -e "\npress ENTER to exit ..."
        read vtInputKey
        unset pager
    }
    
    menuentry 'Check dud plugin configuration' --class=debug_dud {
        set pager=1
        vt_check_plugin_json $vt_plugin_path dud $vtoy_iso_part
        
        echo -e "\npress ENTER to exit ..."
        read vtInputKey
        unset pager
    }
    
    menuentry 'Check password plugin configuration' --class=debug_pwd {
        set pager=1
        vt_check_plugin_json $vt_plugin_path password $vtoy_iso_part
        
        echo -e "\npress ENTER to exit ..."
        read vtInputKey
        unset pager
    }
    
    menuentry 'Check custom boot plugin configuration' --class=debug_custom_boot {
        set pager=1
        vt_check_plugin_json $vt_plugin_path custom_boot $vtoy_iso_part
        
        echo -e "\npress ENTER to exit ..."
        read vtInputKey
        unset pager
    }
